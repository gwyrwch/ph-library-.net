@using Microsoft.AspNetCore.Rewrite.Internal
@model CreatePostViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html lang="en">

<head>
  <meta charset="utf-8" />
  @* <link rel="apple-touch-icon" sizes="76x76" href="../assets/img//apple-icon.png"> *@
  @* <link rel="icon" type="image/png" href="../assets/img//favicon.png"> *@
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
  <title>
      New post 
  </title>
  <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0, shrink-to-fit=no' name='viewport' />
  <!--     Fonts and icons     -->
  <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700,200" rel="stylesheet" />
  <link href="https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css" rel="stylesheet">
  <!-- CSS Files -->
  <link href="~/css/bootstrap.min.css" rel="stylesheet" />
  <link href="~/css/paper-kit.css?v=2.2.0" rel="stylesheet" />
  <link href="~/css/site.css?v=2.2.0" rel="stylesheet" />
</head>

<body class="profile-page sidebar-collapse">
  @Html.Partial("_Navbar")
<div class="section profile-content">
  <div class="container">
    <div class="container-fluid post-type-container">
      <br/>
      <div class="row cust-grid  text-center" id="PostTypeParent">
        @{
          var a = (List<string>)ViewData["Types"];
          @for (var i = 0; i < a.Count; i++)
          {
            <div class="col cust-grid-col">
              <button class="btn btn-round btn-post-type my-auto mx-auto" id=@("PostType" + i.ToString())>
                <i class="fa fa-heart"></i>@a[i]
              </button>
            </div>
          }
        }
      </div>
    </div>
    <br/>
    <div class="container" id="posts">
      <div class="col my-grid">
        @* todo attach pet to post *@
        <form action="/Home/CreatePost" method="post" enctype="multipart/form-data">
          <input type="hidden" asp-for="Username"/>
          <div class="form-row">
            <div class="text-danger"></div>
            <div class="form-group text-center">
              <br/><br/>
              <div class="form-group text-left">
                <div class="btn file-btn">Your photo</div><br/>
                <input type="file" id="input-file" name="PostImage"/>
                <span class="text-danger field-validation-valid" data-valmsg-for="PostImage" data-valmsg-replace="true"></span>
              </div>
              <label for="PostDescription">Post description:</label>
              <textarea class="form-control" rows="20" cols="80" name="Post.Description" id="PostDescription"></textarea>
              <input id="PostTypeSelected" value="0" asp-for="Post.Type" hidden/>
              <input id="PetSelected" value="" asp-for="SelectedPets" hidden/>
              @* <input class="form-control" type="text" id="PostDescription" name="Post.Description" placeholder="Rita"/> *@
              <span class="text-danger field-validation-valid" data-valmsg-for="PostDescription" data-valmsg-replace="true"></span>
            </div>
          </div>
          <div class="form-row" id="formRowForPets">
            <div class="form-group text-left">
              <div class="dropdown" id="PetDropDown">
                <button type="button"  class="btn btn-dropdown dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                  Select the pets
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton"> 
                  @{
                    var pets = Model.Pets;
                    @for (var i = 0; i < pets.Count; i++)
                    {
                      //                todo select of the pet
                      <button type="button" class="dropdown-item" id=@(pets.ElementAt(i).Id)>@pets.ElementAt(i).Name</button>  
                    }
                  }
                </div>
              </div>
            </div>
          </div>
          <div class="form-group text-center">
            <div class="col-md-offset-2 col-md-10">
              <input type="submit" value="Save" id="signUpBtn" class="btn btn-post-type"/>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>
@Html.Partial("_Footer")
  
  <!--   Core JS Files   -->
  <script src="~/js/core/jquery.min.js" type="text/javascript"></script>
  <script src="~/js/core/popper.min.js" type="text/javascript"></script>
  <script src="~/js/core/bootstrap.min.js" type="text/javascript"></script>
  <!--  Plugin for Switches, full documentation here: http://www.jque.re/plugins/version3/bootstrap.switch/ -->
  <script src="~/js/plugins/bootstrap-switch.js"></script>
  <!--  Plugin for the Sliders, full documentation here: http://refreshless.com/nouislider/ -->
  <script src="~/js/plugins/nouislider.min.js" type="text/javascript"></script>
  <!--  Plugin for the DatePicker, full documentation here: https://github.com/uxsolutions/bootstrap-datepicker -->
  <script src="~/js/plugins/moment.min.js"></script>
  <script src="~/js/plugins/bootstrap-datepicker.js" type="text/javascript"></script>
  <!-- Control Center for Paper Kit: parallax effects, scripts for the example pages etc -->
  <script src="~/js/paper-kit.js?v=2.2.0" type="text/javascript"></script>
  <script src="~/js/site.js?v=2.2.0" type="text/javascript"></script>
<script>
    function select() {
      for (var i = 0; i < document.getElementById("PostTypeParent").childElementCount; i++) {
          var btn = document.getElementById("PostType" + i);
          // btn.style.backgroundColor = "rgba(240, 109, 104, 0.45)";
          btn.classList.remove("active");
      }
      this.classList.add("active");
      document.getElementById("PostTypeSelected").setAttribute("value", this.id.slice(8));
    }
    for (var i = 0; i < document.getElementById("PostTypeParent").childElementCount; i++) {
       var btn = document.getElementById("PostType" + i);
       btn.onclick = select;
    }
    
    var selectedPets = [];
    function selectd() {
      // var dlistbtn = document.getElementsByClassName('dropdown-toggle').item(0);
      // dlistbtn.innerHTML = this.innerHTML;
      if (selectedPets.indexOf(this.id) === -1) {
          selectedPets.push(this.id);
          var newButton = document.createElement("button");
          newButton.classList.add("btn");
          newButton.classList.add("btn-round");
          newButton.classList.add("btn-post-type");
          newButton.classList.add("my-auto");
          newButton.classList.add("mx-auto");
          newButton.setAttribute("to-del", this.id);
          newButton.setAttribute("type", "button");
          newButton.innerHTML = this.innerHTML;
          
          newButton.onclick = function (ev) {  
            var idToDel = this.getAttribute("to-del");
            if (selectedPets.indexOf(idToDel) !== -1) {
              selectedPets.splice(selectedPets.indexOf(idToDel), 1);
            }
            
            document.getElementById('formRowForPets').removeChild(this);
            document.getElementById("PetSelected").setAttribute("value", 
              selectedPets.join()
            );
          };
          
          document.getElementById('formRowForPets').appendChild(newButton);
      }
      document.getElementById("PetSelected").setAttribute("value", 
        selectedPets.join()
      );
    }
     
    var dlist = document.getElementsByClassName('dropdown-menu').item(0);
    for (var i = 0; i < dlist.childElementCount; i++) {
        dlist.children.item(i).onclick = selectd;
    }
  </script>

</body>

</html>

